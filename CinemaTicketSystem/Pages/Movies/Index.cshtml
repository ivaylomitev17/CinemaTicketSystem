@page
@using CinemaTicketSystem.Models;
@inject SignInManager<ApplicationUser> signInManager
@model CinemaTicketSystem.Pages.Movies.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Movies</h1>

<p>
    @if (signInManager.IsSignedIn(User) && (User.IsInRole("Admin") || User.IsInRole("Employee")))
    {
        <a asp-page="Create">Create New</a>
    }

</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Movie[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movie[0].Duration)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movie[0].Rating)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Movie)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Duration)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rating)
                </td>
                <td>
                    @if (signInManager.IsSignedIn(User) && (User.IsInRole("Admin") || User.IsInRole("Employee")))
                    {
                        <a asp-page="./Edit" asp-route-id="@item.MovieId">Edit</a>
                    }
                    <a asp-page="./Details" asp-route-id="@item.MovieId">Details</a> 
                    @if (signInManager.IsSignedIn(User) && (User.IsInRole("Admin") || User.IsInRole("Employee")))
                    {
                        <a asp-page="./Delete" asp-route-id="@item.MovieId">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
